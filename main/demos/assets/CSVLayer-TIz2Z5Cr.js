import{p as v,c6 as w,b_ as S,aq as O,q as i,v as r,x as d,I as b,o as F,a$ as q,s as m,H as I,gc as N,bc as _}from"./main-CDaYavBC.js";import J from"./FeatureLayer-BC1qYuBA.js";import{p as x}from"./workers-CzcYUrdx.js";import{g as C}from"./FeatureSet-Cwz-rcsn.js";import{y as P}from"./clientSideDefaults-BnUx19mK.js";import{R as l}from"./Query-BH7XgQGe.js";import"./preload-helper-B76NpbEU.js";import"./MultiOriginJSONSupport-yxaMEwZL.js";import"./layerContainerType-C5CzMsLd.js";import"./FeatureLayerBase-mCeFDtxz.js";import"./Field-BY2Hm51a.js";import"./fieldType-gik0Dj3h.js";import"./HeightModelInfo-CK_3F5s4.js";import"./OperationalLayer-ChYyldB2.js";import"./ElevationInfo-Ih8GjoHF.js";import"./lengthUtils-C0OYbwAD.js";import"./TimeExtent-D-q0-4Ae.js";import"./timeZoneUtils-l8F8UD1r.js";import"./labelingInfo--V08kpJL.js";import"./asyncUtils-BJNm8q7q.js";import"./uuid-Cl5lrJ4c.js";import"./SimpleRenderer-C2ZZF9wm.js";import"./commonProperties-BMBe5bWp.js";import"./colorRamps-DzsbC3cW.js";import"./ColorStop-DmUhEr4J.js";import"./visualVariableUtils-BYN3JDVb.js";import"./UniqueValueRenderer-Bll-3Wu8.js";import"./diffUtils-BL611_ju.js";import"./RendererLegendOptions-C-E5dOdm.js";import"./styleUtils-BRX5Bp5D.js";import"./RelationshipQuery-hYIS6Ym6.js";import"./NormalizationBinParametersMixin--1i-_elf.js";import"./labelUtils-D4HYOu-f.js";import"./LayerFloorInfo-mu5mDLp0.js";import"./Relationship-Bu_eI8B4.js";import"./serviceCapabilitiesUtils-DJcAc8fq.js";import"./infoFor3D-DhzudQro.js";import"./portalItemUtils-DJUWaIG4.js";import"./projectionUtils-BEa50ges.js";import"./Layer-C8cI1IhR.js";import"./editsZScale-BYtBL96J.js";import"./queryZScale-BAimkQFB.js";import"./APIKeyMixin-BAPTkTS6.js";import"./ArcGISService-B0TyNOUt.js";import"./BlendLayer-9qVPow0S.js";import"./jsonUtils-C5o6J8U6.js";import"./parser-DuExENyV.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-Dsmt3ai7.js";import"./common-DQOJ18NT.js";import"./CustomParametersMixin-CGX5FZg1.js";import"./DisplayFilteredLayer-DIJASStv.js";import"./scaleUtils-BF7ICe8H.js";import"./displayFilterUtils-C6_nWc10.js";import"./EditBusLayer-D3fZlHbk.js";import"./FeatureEffectLayer-CDAdh33h.js";import"./FeatureEffect-DhicZGzD.js";import"./FeatureFilter-BS2l7Cj9.js";import"./FeatureReductionLayer-BVRaZiNd.js";import"./FeatureReductionSelection-Y8b_rmlC.js";import"./jsonUtils-C5DfFyf4.js";import"./typeUtils-rPUifWf5.js";import"./ClassBreaksRenderer-40z-DQtI.js";import"./LRUCache-BB1cebTv.js";import"./MemCache-BSBM3Sy1.js";import"./DictionaryScriptEvaluator-Ba3P4t7p.js";import"./Version-eyNBD0jv.js";import"./FieldsIndex-CTbScFzO.js";import"./UnknownTimeZone-DGuDKAWY.js";import"./ArcadeExpression-B6Vt8MC3.js";import"./TimeOnly-xPWdJOM5.js";import"./enum-DCgV3cyC.js";import"./utils-BV7DBUkI.js";import"./defaultCIMValues-CQAn2izL.js";import"./enums-_AFKM9Yk.js";import"./heatmapUtils-D1KdJD9i.js";import"./vec42-CKs01hkn.js";import"./vec4f64-DPb6J-GU.js";import"./MD5-MtSiOt06.js";import"./OrderedLayer-CA7JIngi.js";import"./OrderByInfo-ByxW51VA.js";import"./PortalLayer-DQ0KhvcY.js";import"./PortalItem-BZyj1-UR.js";import"./RefreshableLayer-0kKGkEvd.js";import"./ScaleRangeLayer-56YgPP7g.js";import"./TemporalLayer-DVy8slfS.js";import"./TimeInfo-Dh2J7aei.js";import"./TrackableLayer-C6V3ife8.js";import"./FeatureTemplate-DpNk0hQi.js";import"./FeatureType-DAo_w7My.js";import"./fieldProperties-BO_nqMsE.js";import"./TitleCreator-Ba7Vj8tK.js";import"./versionUtils-DdDSeCzU.js";import"./styleUtils-DYPW_sNJ.js";import"./popupUtils-KaTud7En.js";import"./interfaces-CL2NbQte.js";import"./Queue-b1LP46tS.js";import"./intl-BzqxILdP.js";import"./QueryEngineCapabilities-CsRUnGk7.js";let a=class extends v{constructor(t){super(t),this.type="csv",this.refresh=w(async e=>{await this.load();const{extent:s,timeExtent:n}=await this._connection.invoke("refresh",e);return s&&(this.sourceJSON.extent=s),n&&(this.sourceJSON.timeInfo.timeExtent=[n.start,n.end]),{dataChanged:!0,updates:{extent:this.sourceJSON.extent,timeInfo:this.sourceJSON.timeInfo}}})}load(t){const e=t!=null?t.signal:null;return this.addResolvingPromise(this._startWorker(e)),Promise.resolve(this)}destroy(){this._connection?.close(),this._connection=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(t,e={}){await this.load(e);const s=await this._connection.invoke("queryFeatures",t?t.toJSON():null,e);return C.fromJSON(s)}async queryFeaturesJSON(t,e={}){return await this.load(e),this._connection.invoke("queryFeatures",t?t.toJSON():null,e)}async queryFeatureCount(t,e={}){return await this.load(e),this._connection.invoke("queryFeatureCount",t?t.toJSON():null,e)}async queryObjectIds(t,e={}){return await this.load(e),this._connection.invoke("queryObjectIds",t?t.toJSON():null,e)}async queryExtent(t,e={}){await this.load(e);const s=await this._connection.invoke("queryExtent",t?t.toJSON():null,e);return{count:s.count,extent:S.fromJSON(s.extent)}}async querySnapping(t,e={}){return await this.load(e),this._connection.invoke("querySnapping",t,e)}async queryAttributeBins(t,e={}){return await this.load(),this._connection.invoke("queryAttributeBins",t?t.toJSON():null,e)}async _startWorker(t){this._connection=await x("CSVSourceWorker",{strategy:O("feature-layers-workers")?"dedicated":"local",signal:t,registryTarget:this});const{url:e,delimiter:s,fields:n,latitudeField:c,longitudeField:h,spatialReference:y,timeInfo:f}=this.loadOptions,p=await this._connection.invoke("load",{url:e,customParameters:this.customParameters,parsingOptions:{delimiter:s,fields:n?.map(g=>g.toJSON()),latitudeField:c,longitudeField:h,spatialReference:y?.toJSON(),timeInfo:f?.toJSON()}},{signal:t});this.locationInfo=p.locationInfo,this.sourceJSON=p.layerDefinition,this.delimiter=p.delimiter}};i([r()],a.prototype,"type",void 0),i([r()],a.prototype,"loadOptions",void 0),i([r()],a.prototype,"customParameters",void 0),i([r()],a.prototype,"locationInfo",void 0),i([r()],a.prototype,"sourceJSON",void 0),i([r()],a.prototype,"delimiter",void 0),a=i([d("esri.layers.graphics.sources.CSVSource")],a);function u(t,e){throw new m(e,`CSVLayer (title: ${t.title}, id: ${t.id}) cannot be saved to a portal item`)}let o=class extends J{constructor(...t){super(...t),this.geometryType="point",this.capabilities=P(!1,!1),this.delimiter=null,this.editingEnabled=!1,this.fields=null,this.latitudeField=null,this.locationType="coordinates",this.longitudeField=null,this.operationalLayerType="CSV",this.outFields=["*"],this.path=null,this.spatialReference=b.WGS84,this.source=null,this.type="csv"}normalizeCtorArgs(t,e){return typeof t=="string"?{url:t,...e}:t}load(t){const e=t!=null?t.signal:null,s=this.loadFromPortal({supportedTypes:["CSV"],supportsData:!1},t).catch(F).then(async()=>this.initLayerProperties(await this.createGraphicsSource(e)));return this.addResolvingPromise(s),Promise.resolve(this)}get isTable(){return this.loaded&&this.geometryType==null}readWebMapLabelsVisible(t,e){return e.showLabels!=null?e.showLabels:!!e.layerDefinition?.drawingInfo?.labelingInfo}set url(t){if(!t)return void this._set("url",t);const e=q(t);this._set("url",e.path),e.query&&(this.customParameters={...this.customParameters,...e.query})}async createGraphicsSource(t){const e=new a({loadOptions:{delimiter:this.delimiter,fields:this.fields,latitudeField:this.latitudeField??void 0,longitudeField:this.longitudeField??void 0,spatialReference:this.spatialReference??void 0,timeInfo:this.timeInfo??void 0,url:this.url},customParameters:this.customParameters??void 0});return this._set("source",e),await e.load({signal:t}),this.read({locationInfo:e.locationInfo,columnDelimiter:e.delimiter},{origin:"service",url:this.parsedUrl}),e}queryFeatures(t,e){return this.load().then(()=>this.source.queryFeatures(l.from(t)||this.createQuery())).then(s=>{if(s?.features)for(const n of s.features)n.layer=n.sourceLayer=this;return s})}async queryObjectIds(t,e){return await this.load(),this.source.queryObjectIds(l.from(t)||this.createQuery())}queryFeatureCount(t,e){return this.load().then(()=>this.source.queryFeatureCount(l.from(t)||this.createQuery()))}queryExtent(t,e){return this.load().then(()=>this.source.queryExtent(l.from(t)||this.createQuery()))}read(t,e){super.read(t,e),e&&e.origin==="service"&&this.revert(["latitudeField","longitudeField"],"service")}write(t,e){return super.write(t,{...e,writeLayerSchema:!0})}clone(){throw new m("csv-layer:clone",`CSVLayer (title: ${this.title}, id: ${this.id}) cannot be cloned`)}async save(t){return u(this,"csv-layer:save")}async saveAs(t,e){return u(this,"csv-layer:save-as")}async hasDataChanged(){try{const{dataChanged:t,updates:e}=await this.source.refresh(this.customParameters);return e!=null&&this.read(e,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),t}catch{}return!1}_verifyFields(){}_verifySource(){}_hasMemorySource(){return!1}};i([r({readOnly:!0,json:{read:!1,write:!1}})],o.prototype,"capabilities",void 0),i([r({type:[","," ",";","|","	"],json:{read:{source:"columnDelimiter"},write:{target:"columnDelimiter",ignoreOrigin:!0}}})],o.prototype,"delimiter",void 0),i([r({readOnly:!0,type:Boolean,json:{origins:{"web-scene":{read:!1,write:!1}}}})],o.prototype,"editingEnabled",void 0),i([r({json:{read:{source:"layerDefinition.fields"},write:{target:"layerDefinition.fields"}}})],o.prototype,"fields",void 0),i([r({type:Boolean,readOnly:!0})],o.prototype,"isTable",null),i([I("web-map","labelsVisible",["layerDefinition.drawingInfo.labelingInfo","showLabels"])],o.prototype,"readWebMapLabelsVisible",null),i([r({type:String,json:{read:{source:"locationInfo.latitudeFieldName"},write:{target:"locationInfo.latitudeFieldName",ignoreOrigin:!0}}})],o.prototype,"latitudeField",void 0),i([r({type:["show","hide"]})],o.prototype,"listMode",void 0),i([r({type:["coordinates"],json:{read:{source:"locationInfo.locationType"},write:{target:"locationInfo.locationType",ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"locationType",void 0),i([r({type:String,json:{read:{source:"locationInfo.longitudeFieldName"},write:{target:"locationInfo.longitudeFieldName",ignoreOrigin:!0}}})],o.prototype,"longitudeField",void 0),i([r({type:["CSV"]})],o.prototype,"operationalLayerType",void 0),i([r()],o.prototype,"outFields",void 0),i([r({type:String,json:{origins:{"web-scene":{read:!1,write:!1}},read:!1,write:!1}})],o.prototype,"path",void 0),i([r({json:{read:!1},cast:null,type:a,readOnly:!0})],o.prototype,"source",void 0),i([r({json:{read:!1},value:"csv",readOnly:!0})],o.prototype,"type",void 0),i([r({json:{read:_,write:{isRequired:!0,ignoreOrigin:!0,writer:N}}})],o.prototype,"url",null),o=i([d("esri.layers.CSVLayer")],o);const Fe=o;export{Fe as default};
